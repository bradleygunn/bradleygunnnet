<!DOCTYPE html>
<html lang="en" xmlns:og="http://ogp.me/ns#">
    <head>
        <link rel="icon" href="favicon.ico" type="image/x-icon" />
        <title>{{#if meta.title}}{{meta.title}} - {{/if}}Bradley Gunn</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

        <meta name="description" content="{{meta.description}}">
        <meta name="keywords" content="Bradley Gunn, Bradley Gunn Raver, Bradley Gunn Sailor, Raver, Sailor">
        <meta name="author" content="Bradley Gunn">

        <meta property="og:title" content="{{#if meta.title}}{{meta.title}} - {{/if}}Bradley Gunn" />
        <meta property="og:description" content="{{meta.description}}" />
        <meta property="og:type" content="website" />
        <meta property="og:site_name" content="Bradley Gunn" />
        <meta property="og:url" content="https://bradleygunn.net" />
        <meta property="og:locale" content="en_GB" />
        <meta property="og:image" content="{{meta.image}}" />

        <meta name="twitter:card" content="summary" />
        <meta name="twitter:site" content="@bradgunnraver" />
        <meta name="twitter:title" content="{{#if meta.title}}{{meta.title}} - {{/if}}Bradley Gunn" />
        <meta name="twitter:description" content="{{meta.description}}" />

        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
        <script src="https://code.jquery.com/jquery-3.4.0.slim.min.js" integrity="sha256-ZaXnYkHGqIhqTbJ6MB4l9Frs/r7U4jlx7ir8PJYBqbI=" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
        <script>
            /**
                @param {string} query - The query to send to the graph. See schema at /graph/schema
            */
            function queryGraph(query) {
                return new Promise((resolve, reject) => {
                    const graphQuery = {
                        query: query,
                        operationName: null,
                        variables: null
                    };
                    
                    const xhr = new XMLHttpRequest();
                    xhr.open("POST", "/graph", true);
                    xhr.setRequestHeader("Content-Type", "application/json; charset=utf-8");
                    xhr.responseType = "json";
                    xhr.onreadystatechange = function() {
                        if (this.readyState === XMLHttpRequest.DONE) {
                            if (this.status === 200) {
                                const requestEnd = new Date().getTime();
                                const execTime = Math.abs(requestStart - requestEnd);
                                console.group("Graph query success");
                                console.log(`status: ${this.status} ${this.statusText}`);
                                console.log(`query took: ${execTime} ms / ${(execTime / 1000).toFixed(1)} s`);
                                console.log(`query: ${query}`);
                                console.log("result:");
                                console.log(this.response.data);
                                console.groupEnd();
                                resolve(this.response.data);
                            } else {
                                console.group("Graph query error");
                                console.error(`status: ${this.status} (${this.statusText})`);
                                console.error(`query: ${query}`);
                                console.error(`error: ${this.response.errors[0].message || this.response}`);;
                                console.groupEnd();
                                reject(this.response.errors[0].message || this.response);
                            }
                        }
                    };

                    const requestStart = new Date().getTime();

                    xhr.send(JSON.stringify(graphQuery));
                });
            }

            const baseUrl = `${window.location.protocol}//${window.location.host}`;
            console.clear();
            console.group(`Welcome to ${baseUrl}`);
            console.info("If you have opened the console to query the graph, you can use the queryGraph function.");
            console.info(`You can find the schema at ${baseUrl}/graph/schema`);
            console.info(`Alternatively you can use the GraphiQL page at ${baseUrl}/graph/debug`);
            console.groupEnd();
        </script>
    </head>
    <body style="padding-top: 50px">
        <nav class="nav fixed-top bg-light">
            <a class="nav-link text-dark" href="/">Bradley Gunn</a>
            <div class="nav-item dropdown">
                <a class="nav-link dropdown-toggle text-dark" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Episodes</a>
                <div class="dropdown-menu rounded-0 bg-light">
                    <a class="dropdown-item text-dark" href="/bgr">BGR</a>
                    <a class="dropdown-item text-dark" href="/bgs">BGS</a>
                </div>
            </div>
            <a class="nav-link text-dark" href="/news">News</a>
        </nav>
        <div class="container">
            {{{body}}}
        </div>
    </body>
</html>